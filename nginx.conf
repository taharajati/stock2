server {
    listen 80;
    server_name easyvest.ir www.easyvest.ir;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name easyvest.ir www.easyvest.ir;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/easyvest.ir/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/easyvest.ir/privkey.pem;

    # Logging
    access_log /var/log/nginx/easyvest.access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/easyvest.error.log debug;

    # Root directory for static files
    root /root/stock2/stock2/client/build;
    index index.html;

    # Frontend static files
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Backend API proxy
    location /auth/ {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }

    # Error pages
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval';" always;
}